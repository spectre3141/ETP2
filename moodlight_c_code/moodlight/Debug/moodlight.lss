
moodlight.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000042e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003ba  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800100  00800100  0000042e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000042e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000460  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000004a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f86  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c44  00000000  00000000  0000151e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000879  00000000  00000000  00002162  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e8  00000000  00000000  000029dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006a7  00000000  00000000  00002bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000398  00000000  00000000  0000326b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00003603  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 61 01 	jmp	0x2c2	; 0x2c2 <__vector_28>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	ac 32       	cpi	r26, 0x2C	; 44
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 50 01 	call	0x2a0	; 0x2a0 <main>
  d4:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <alarm_init>:
}
/* returns the set alarm time*/
uint32_t getAlarmTime(void)
{
	return timeset;
}
  dc:	cf 93       	push	r28
  de:	df 93       	push	r29
  e0:	8a b1       	in	r24, 0x0a	; 10
  e2:	80 66       	ori	r24, 0x60	; 96
  e4:	8a b9       	out	0x0a, r24	; 10
  e6:	54 9a       	sbi	0x0a, 4	; 10
  e8:	5c 9a       	sbi	0x0b, 4	; 11
  ea:	14 bc       	out	0x24, r1	; 36
  ec:	15 bc       	out	0x25, r1	; 37
  ee:	84 b5       	in	r24, 0x24	; 36
  f0:	80 6a       	ori	r24, 0xA0	; 160
  f2:	84 bd       	out	0x24, r24	; 36
  f4:	84 b5       	in	r24, 0x24	; 36
  f6:	81 60       	ori	r24, 0x01	; 1
  f8:	84 bd       	out	0x24, r24	; 36
  fa:	85 b5       	in	r24, 0x25	; 37
  fc:	83 60       	ori	r24, 0x03	; 3
  fe:	85 bd       	out	0x25, r24	; 37
 100:	8f e3       	ldi	r24, 0x3F	; 63
 102:	87 bd       	out	0x27, r24	; 39
 104:	80 ec       	ldi	r24, 0xC0	; 192
 106:	88 bd       	out	0x28, r24	; 40
 108:	c0 eb       	ldi	r28, 0xB0	; 176
 10a:	d0 e0       	ldi	r29, 0x00	; 0
 10c:	18 82       	st	Y, r1
 10e:	a1 eb       	ldi	r26, 0xB1	; 177
 110:	b0 e0       	ldi	r27, 0x00	; 0
 112:	1c 92       	st	X, r1
 114:	10 92 b6 00 	sts	0x00B6, r1	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
 118:	e0 e7       	ldi	r30, 0x70	; 112
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	10 82       	st	Z, r1
 11e:	88 81       	ld	r24, Y
 120:	82 60       	ori	r24, 0x02	; 2
 122:	88 83       	st	Y, r24
 124:	8c 91       	ld	r24, X
 126:	87 60       	ori	r24, 0x07	; 7
 128:	8c 93       	st	X, r24
 12a:	86 e6       	ldi	r24, 0x66	; 102
 12c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 130:	80 81       	ld	r24, Z
 132:	82 60       	ori	r24, 0x02	; 2
 134:	80 83       	st	Z, r24
 136:	78 94       	sei
 138:	df 91       	pop	r29
 13a:	cf 91       	pop	r28
 13c:	08 95       	ret

0000013e <setAlarmDuration>:
/* Sets how long the alarm is played*/
void setAlarmDuration(uint16_t alarmTime)
{
	alarmDuration = alarmTime;
 13e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 142:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 146:	08 95       	ret

00000148 <setAlarmTime>:
}
/*sets the alarm time, saves the alarm time*/
void setAlarmTime(uint32_t time)
{
	seconds = time;
 148:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <seconds>
 14c:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <seconds+0x1>
 150:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <seconds+0x2>
 154:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <seconds+0x3>
	timeset = seconds;
 158:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <timeset>
 15c:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <timeset+0x1>
 160:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timeset+0x2>
 164:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <timeset+0x3>
 168:	08 95       	ret

0000016a <LED_initPWM>:
 16a:	8a b1       	in	r24, 0x0a	; 10
 16c:	87 60       	ori	r24, 0x07	; 7
 16e:	8a b9       	out	0x0a, r24	; 10
 170:	84 b1       	in	r24, 0x04	; 4
 172:	86 60       	ori	r24, 0x06	; 6
 174:	84 b9       	out	0x04, r24	; 4
 176:	5a 9a       	sbi	0x0b, 2	; 11
 178:	a0 e9       	ldi	r26, 0x90	; 144
 17a:	b0 e0       	ldi	r27, 0x00	; 0
 17c:	1c 92       	st	X, r1
 17e:	e1 e9       	ldi	r30, 0x91	; 145
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	10 82       	st	Z, r1
 184:	10 92 92 00 	sts	0x0092, r1	; 0x800092 <__TEXT_REGION_LENGTH__+0x7e0092>
 188:	8c 91       	ld	r24, X
 18a:	80 68       	ori	r24, 0x80	; 128
 18c:	8c 93       	st	X, r24
 18e:	8c 91       	ld	r24, X
 190:	82 60       	ori	r24, 0x02	; 2
 192:	8c 93       	st	X, r24
 194:	80 81       	ld	r24, Z
 196:	88 61       	ori	r24, 0x18	; 24
 198:	80 83       	st	Z, r24
 19a:	80 81       	ld	r24, Z
 19c:	81 60       	ori	r24, 0x01	; 1
 19e:	80 83       	st	Z, r24
 1a0:	8f e9       	ldi	r24, 0x9F	; 159
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	90 93 97 00 	sts	0x0097, r25	; 0x800097 <__TEXT_REGION_LENGTH__+0x7e0097>
 1a8:	80 93 96 00 	sts	0x0096, r24	; 0x800096 <__TEXT_REGION_LENGTH__+0x7e0096>
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 1b4:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 1b8:	a0 e8       	ldi	r26, 0x80	; 128
 1ba:	b0 e0       	ldi	r27, 0x00	; 0
 1bc:	1c 92       	st	X, r1
 1be:	e1 e8       	ldi	r30, 0x81	; 129
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	10 82       	st	Z, r1
 1c4:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
 1c8:	8c 91       	ld	r24, X
 1ca:	80 6a       	ori	r24, 0xA0	; 160
 1cc:	8c 93       	st	X, r24
 1ce:	8c 91       	ld	r24, X
 1d0:	82 60       	ori	r24, 0x02	; 2
 1d2:	8c 93       	st	X, r24
 1d4:	80 81       	ld	r24, Z
 1d6:	88 61       	ori	r24, 0x18	; 24
 1d8:	80 83       	st	Z, r24
 1da:	80 81       	ld	r24, Z
 1dc:	81 60       	ori	r24, 0x01	; 1
 1de:	80 83       	st	Z, r24
 1e0:	4f ef       	ldi	r20, 0xFF	; 255
 1e2:	5f e0       	ldi	r21, 0x0F	; 15
 1e4:	50 93 87 00 	sts	0x0087, r21	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 1e8:	40 93 86 00 	sts	0x0086, r20	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 1ec:	84 e4       	ldi	r24, 0x44	; 68
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1f4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1f8:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1fc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 200:	a0 ea       	ldi	r26, 0xA0	; 160
 202:	b0 e0       	ldi	r27, 0x00	; 0
 204:	1c 92       	st	X, r1
 206:	e1 ea       	ldi	r30, 0xA1	; 161
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	10 82       	st	Z, r1
 20c:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7e00a2>
 210:	2c 91       	ld	r18, X
 212:	20 6a       	ori	r18, 0xA0	; 160
 214:	2c 93       	st	X, r18
 216:	2c 91       	ld	r18, X
 218:	22 60       	ori	r18, 0x02	; 2
 21a:	2c 93       	st	X, r18
 21c:	20 81       	ld	r18, Z
 21e:	28 61       	ori	r18, 0x18	; 24
 220:	20 83       	st	Z, r18
 222:	20 81       	ld	r18, Z
 224:	21 60       	ori	r18, 0x01	; 1
 226:	20 83       	st	Z, r18
 228:	50 93 a7 00 	sts	0x00A7, r21	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7e00a7>
 22c:	40 93 a6 00 	sts	0x00A6, r20	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7e00a6>
 230:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7e00a9>
 234:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7e00a8>
 238:	90 93 ab 00 	sts	0x00AB, r25	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7e00ab>
 23c:	80 93 aa 00 	sts	0x00AA, r24	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7e00aa>
 240:	08 95       	ret

00000242 <LED_setValue>:
 242:	82 30       	cpi	r24, 0x02	; 2
 244:	91 f0       	breq	.+36     	; 0x26a <LED_setValue+0x28>
 246:	18 f4       	brcc	.+6      	; 0x24e <LED_setValue+0xc>
 248:	81 30       	cpi	r24, 0x01	; 1
 24a:	31 f0       	breq	.+12     	; 0x258 <LED_setValue+0x16>
 24c:	08 95       	ret
 24e:	83 30       	cpi	r24, 0x03	; 3
 250:	a9 f0       	breq	.+42     	; 0x27c <LED_setValue+0x3a>
 252:	84 30       	cpi	r24, 0x04	; 4
 254:	e1 f0       	breq	.+56     	; 0x28e <LED_setValue+0x4c>
 256:	08 95       	ret
 258:	84 e1       	ldi	r24, 0x14	; 20
 25a:	68 9f       	mul	r22, r24
 25c:	b0 01       	movw	r22, r0
 25e:	11 24       	eor	r1, r1
 260:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 264:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 268:	08 95       	ret
 26a:	84 e1       	ldi	r24, 0x14	; 20
 26c:	68 9f       	mul	r22, r24
 26e:	b0 01       	movw	r22, r0
 270:	11 24       	eor	r1, r1
 272:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 276:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 27a:	08 95       	ret
 27c:	84 e1       	ldi	r24, 0x14	; 20
 27e:	68 9f       	mul	r22, r24
 280:	b0 01       	movw	r22, r0
 282:	11 24       	eor	r1, r1
 284:	70 93 ab 00 	sts	0x00AB, r23	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7e00ab>
 288:	60 93 aa 00 	sts	0x00AA, r22	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7e00aa>
 28c:	08 95       	ret
 28e:	84 e1       	ldi	r24, 0x14	; 20
 290:	68 9f       	mul	r22, r24
 292:	b0 01       	movw	r22, r0
 294:	11 24       	eor	r1, r1
 296:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7e00a9>
 29a:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7e00a8>
 29e:	08 95       	ret

000002a0 <main>:
{
	int counter = 0;
	int dir = 1;
	uint8_t buffer[3];
	
	alarm_init();
 2a0:	0e 94 6e 00 	call	0xdc	; 0xdc <alarm_init>
	LED_initPWM();
 2a4:	0e 94 b5 00 	call	0x16a	; 0x16a <LED_initPWM>
	UART_init();
 2a8:	0e 94 85 01 	call	0x30a	; 0x30a <UART_init>
	setAlarmTime(2000);
 2ac:	60 ed       	ldi	r22, 0xD0	; 208
 2ae:	77 e0       	ldi	r23, 0x07	; 7
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	0e 94 a4 00 	call	0x148	; 0x148 <setAlarmTime>
	setAlarmDuration(1500);
 2b8:	8c ed       	ldi	r24, 0xDC	; 220
 2ba:	95 e0       	ldi	r25, 0x05	; 5
 2bc:	0e 94 9f 00 	call	0x13e	; 0x13e <setAlarmDuration>
 2c0:	ff cf       	rjmp	.-2      	; 0x2c0 <main+0x20>

000002c2 <__vector_28>:
		
    }
}

ISR(USART1_RX_vect)
{
 2c2:	1f 92       	push	r1
 2c4:	0f 92       	push	r0
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	0f 92       	push	r0
 2ca:	11 24       	eor	r1, r1
 2cc:	2f 93       	push	r18
 2ce:	3f 93       	push	r19
 2d0:	4f 93       	push	r20
 2d2:	5f 93       	push	r21
 2d4:	6f 93       	push	r22
 2d6:	7f 93       	push	r23
 2d8:	8f 93       	push	r24
 2da:	9f 93       	push	r25
 2dc:	af 93       	push	r26
 2de:	bf 93       	push	r27
 2e0:	ef 93       	push	r30
 2e2:	ff 93       	push	r31
	RX_IRQ();
 2e4:	0e 94 b2 01 	call	0x364	; 0x364 <RX_IRQ>
}
 2e8:	ff 91       	pop	r31
 2ea:	ef 91       	pop	r30
 2ec:	bf 91       	pop	r27
 2ee:	af 91       	pop	r26
 2f0:	9f 91       	pop	r25
 2f2:	8f 91       	pop	r24
 2f4:	7f 91       	pop	r23
 2f6:	6f 91       	pop	r22
 2f8:	5f 91       	pop	r21
 2fa:	4f 91       	pop	r20
 2fc:	3f 91       	pop	r19
 2fe:	2f 91       	pop	r18
 300:	0f 90       	pop	r0
 302:	0f be       	out	0x3f, r0	; 63
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <UART_init>:
 30a:	f8 94       	cli
 30c:	24 98       	cbi	0x04, 4	; 4
 30e:	23 9a       	sbi	0x04, 3	; 4
 310:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
 314:	83 e3       	ldi	r24, 0x33	; 51
 316:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
 31a:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
 31e:	e9 ec       	ldi	r30, 0xC9	; 201
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	10 82       	st	Z, r1
 324:	80 81       	ld	r24, Z
 326:	88 61       	ori	r24, 0x18	; 24
 328:	80 83       	st	Z, r24
 32a:	80 81       	ld	r24, Z
 32c:	80 68       	ori	r24, 0x80	; 128
 32e:	80 83       	st	Z, r24
 330:	ea ec       	ldi	r30, 0xCA	; 202
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	10 82       	st	Z, r1
 336:	86 e0       	ldi	r24, 0x06	; 6
 338:	80 83       	st	Z, r24
 33a:	78 94       	sei
 33c:	08 95       	ret

0000033e <UART_deliverData>:
 33e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <receiveData>
 342:	80 33       	cpi	r24, 0x30	; 48
 344:	71 f4       	brne	.+28     	; 0x362 <UART_deliverData+0x24>
 346:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <receiveData+0x1>
 34a:	88 23       	and	r24, r24
 34c:	51 f0       	breq	.+20     	; 0x362 <UART_deliverData+0x24>
 34e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <receiveData+0x1>
 352:	85 30       	cpi	r24, 0x05	; 5
 354:	30 f4       	brcc	.+12     	; 0x362 <UART_deliverData+0x24>
 356:	eb e0       	ldi	r30, 0x0B	; 11
 358:	f1 e0       	ldi	r31, 0x01	; 1
 35a:	62 81       	ldd	r22, Z+2	; 0x02
 35c:	81 81       	ldd	r24, Z+1	; 0x01
 35e:	0e 94 21 01 	call	0x242	; 0x242 <LED_setValue>
 362:	08 95       	ret

00000364 <RX_IRQ>:
 364:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
 368:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <character>
 36c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <character>
 370:	8d 30       	cpi	r24, 0x0D	; 13
 372:	71 f0       	breq	.+28     	; 0x390 <RX_IRQ+0x2c>
 374:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <counter>
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <character>
 37e:	e5 5e       	subi	r30, 0xE5	; 229
 380:	fe 4f       	sbci	r31, 0xFE	; 254
 382:	80 83       	st	Z, r24
 384:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <counter>
 388:	8f 5f       	subi	r24, 0xFF	; 255
 38a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <counter>
 38e:	08 95       	ret
 390:	80 e0       	ldi	r24, 0x00	; 0
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	fc 01       	movw	r30, r24
 396:	e5 5e       	subi	r30, 0xE5	; 229
 398:	fe 4f       	sbci	r31, 0xFE	; 254
 39a:	20 81       	ld	r18, Z
 39c:	fc 01       	movw	r30, r24
 39e:	e5 5f       	subi	r30, 0xF5	; 245
 3a0:	fe 4f       	sbci	r31, 0xFE	; 254
 3a2:	20 83       	st	Z, r18
 3a4:	01 96       	adiw	r24, 0x01	; 1
 3a6:	80 31       	cpi	r24, 0x10	; 16
 3a8:	91 05       	cpc	r25, r1
 3aa:	a1 f7       	brne	.-24     	; 0x394 <RX_IRQ+0x30>
 3ac:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <counter>
 3b0:	0e 94 9f 01 	call	0x33e	; 0x33e <UART_deliverData>
 3b4:	08 95       	ret

000003b6 <_exit>:
 3b6:	f8 94       	cli

000003b8 <__stop_program>:
 3b8:	ff cf       	rjmp	.-2      	; 0x3b8 <__stop_program>
