Archive member included to satisfy reference by file (symbol)

c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                              C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o (exit)
c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                              alarm.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

character           0x1               UART.o

Discarded input sections

 .data          0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .bss           0x00000000        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .text          0x00000000        0x0 alarm.o
 .data          0x00000000        0x0 alarm.o
 .bss           0x00000000        0x0 alarm.o
 .text.alarm_setVol
                0x00000000       0x12 alarm.o
 .text.resetAlarm
                0x00000000       0x2e alarm.o
 .text          0x00000000        0x0 LED.o
 .data          0x00000000        0x0 LED.o
 .bss           0x00000000        0x0 LED.o
 .text.LED_readValue
                0x00000000       0x42 LED.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 UART.o
 .data          0x00000000        0x0 UART.o
 .bss           0x00000000        0x0 UART.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000003         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
LOAD alarm.o
LOAD LED.o
LOAD main.o
LOAD UART.o
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
END GROUP
START GROUP
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libm.a
LOAD c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/../../../../avr/lib/avr5\libc.a
LOAD C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5\libatmega328pb.a
END GROUP
                0x00020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x0000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x00010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x00000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x00000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x00000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x00000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x620
 *(.vectors)
 .vectors       0x00000000       0xb4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
                0x000000b4                . = ALIGN (0x2)
                0x000000b4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000b4        0x0 linker stubs
 *(.trampolines*)
                0x000000b4                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x000000b4                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000b4                __ctors_start = .
 *(.ctors)
                0x000000b4                __ctors_end = .
                0x000000b4                __dtors_start = .
 *(.dtors)
                0x000000b4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000b4        0x0 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
                0x000000b4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000b4        0xc C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000c0       0x10 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_clear_bss.o)
                0x000000c0                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000d0        0x8 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 *(.init9)
 *(.text)
 .text          0x000000d8        0x4 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
                0x000000d8                __vector_38
                0x000000d8                __vector_22
                0x000000d8                __vector_1
                0x000000d8                __vector_32
                0x000000d8                __vector_34
                0x000000d8                __vector_24
                0x000000d8                __vector_12
                0x000000d8                __bad_interrupt
                0x000000d8                __vector_6
                0x000000d8                __vector_31
                0x000000d8                __vector_35
                0x000000d8                __vector_39
                0x000000d8                __vector_3
                0x000000d8                __vector_23
                0x000000d8                __vector_30
                0x000000d8                __vector_25
                0x000000d8                __vector_11
                0x000000d8                __vector_13
                0x000000d8                __vector_17
                0x000000d8                __vector_19
                0x000000d8                __vector_41
                0x000000d8                __vector_43
                0x000000d8                __vector_27
                0x000000d8                __vector_5
                0x000000d8                __vector_33
                0x000000d8                __vector_37
                0x000000d8                __vector_4
                0x000000d8                __vector_44
                0x000000d8                __vector_9
                0x000000d8                __vector_2
                0x000000d8                __vector_21
                0x000000d8                __vector_15
                0x000000d8                __vector_36
                0x000000d8                __vector_29
                0x000000d8                __vector_40
                0x000000d8                __vector_8
                0x000000d8                __vector_26
                0x000000d8                __vector_14
                0x000000d8                __vector_10
                0x000000d8                __vector_16
                0x000000d8                __vector_18
                0x000000d8                __vector_20
                0x000000d8                __vector_42
                0x000000dc                . = ALIGN (0x2)
 *(.text.*)
 .text.alarm_init
                0x000000dc       0x64 alarm.o
                0x000000dc                alarm_init
 .text.getAlarmTime
                0x00000140       0x12 alarm.o
                0x00000140                getAlarmTime
 .text.setAlarmDuration
                0x00000152        0xa alarm.o
                0x00000152                setAlarmDuration
 .text.setAlarmTime
                0x0000015c       0x22 alarm.o
                0x0000015c                setAlarmTime
 .text.alarmSoundOff
                0x0000017e        0x4 alarm.o
                0x0000017e                alarmSoundOff
 .text.alarmSoundOn
                0x00000182        0x4 alarm.o
                0x00000182                alarmSoundOn
 .text.TIMER2_IRQ
                0x00000186       0xb0 alarm.o
                0x00000186                TIMER2_IRQ
 .text.LED_initPWM
                0x00000236       0xd4 LED.o
                0x00000236                LED_initPWM
 .text.LED_setValue
                0x0000030a       0x5e LED.o
                0x0000030a                LED_setValue
 .text.__vector_7
                0x00000368       0x48 main.o
                0x00000368                __vector_7
 .text.__vector_28
                0x000003b0       0x48 main.o
                0x000003b0                __vector_28
 .text.main     0x000003f8       0x16 main.o
                0x000003f8                main
 .text.UART_init
                0x0000040e       0x34 UART.o
                0x0000040e                UART_init
 .text.UART_sendByte
                0x00000442       0x10 UART.o
                0x00000442                UART_sendByte
 .text.UART_sendBuffer
                0x00000452       0x38 UART.o
                0x00000452                UART_sendBuffer
 .text.UART_deliverData
                0x0000048a      0x104 UART.o
                0x0000048a                UART_deliverData
 .text.RX_IRQ   0x0000058e       0x8e UART.o
                0x0000058e                RX_IRQ
                0x0000061c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000061c        0x0 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
                0x0000061c                _exit
                0x0000061c                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000061c        0x4 c:/program files (x86)/atmel/studio/7.0/toolchain/avr8/avr8-gnu-toolchain/bin/../lib/gcc/avr/5.4.0/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000620                _etext = .

.data           0x00800100        0x0 load address 0x00000620
                [!provide]                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                [!provide]                PROVIDE (__data_end, .)

.bss            0x00800100       0x30
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.alarmActiveCounter
                0x00800100        0x2 alarm.o
                0x00800100                alarmActiveCounter
 .bss.alarmDuration
                0x00800102        0x2 alarm.o
                0x00800102                alarmDuration
 .bss.alarmTimeCounter
                0x00800104        0x4 alarm.o
                0x00800104                alarmTimeCounter
 .bss.alarmTimeSet
                0x00800108        0x4 alarm.o
                0x00800108                alarmTimeSet
 .bss.counter1Hz
                0x0080010c        0x1 alarm.o
                0x0080010c                counter1Hz
 .bss.receiving
                0x0080010d        0x1 UART.o
                0x0080010d                receiving
 .bss.counter   0x0080010e        0x1 UART.o
 .bss.receiveData
                0x0080010f       0x10 UART.o
 .bss.buffer    0x0080011f       0x10 UART.o
 *(COMMON)
 COMMON         0x0080012f        0x1 UART.o
                0x0080012f                character
                0x00800130                PROVIDE (__bss_end, .)
                0x00000620                __data_load_start = LOADADDR (.data)
                0x00000620                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800130        0x0
                [!provide]                PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                PROVIDE (__noinit_end, .)
                0x00800130                _end = .
                [!provide]                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x30
 *(.comment)
 .comment       0x00000000       0x30 alarm.o
                                 0x31 (size before relaxing)
 .comment       0x00000030       0x31 LED.o
 .comment       0x00000030       0x31 main.o
 .comment       0x00000030       0x31 UART.o

.note.gnu.avr.deviceinfo
                0x00000000       0x40
 .note.gnu.avr.deviceinfo
                0x00000000       0x40 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x100
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x60 alarm.o
 .debug_aranges
                0x00000060       0x30 LED.o
 .debug_aranges
                0x00000090       0x30 main.o
 .debug_aranges
                0x000000c0       0x40 UART.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x10a6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000      0x8ea C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .debug_info    0x000008ea      0x21b alarm.o
 .debug_info    0x00000b05      0x130 LED.o
 .debug_info    0x00000c35      0x147 main.o
 .debug_info    0x00000d7c      0x32a UART.o

.debug_abbrev   0x00000000      0xc12
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x86e C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .debug_abbrev  0x0000086e       0xc8 alarm.o
 .debug_abbrev  0x00000936       0xbb LED.o
 .debug_abbrev  0x000009f1       0x99 main.o
 .debug_abbrev  0x00000a8a      0x188 UART.o

.debug_line     0x00000000      0x945
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x00000000      0x1a5 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .debug_line    0x000001a5      0x249 alarm.o
 .debug_line    0x000003ee      0x208 LED.o
 .debug_line    0x000005f6       0xb8 main.o
 .debug_line    0x000006ae      0x297 UART.o

.debug_frame    0x00000000      0x25c
 *(.debug_frame)
 .debug_frame   0x00000000       0xb0 alarm.o
 .debug_frame   0x000000b0       0x44 LED.o
 .debug_frame   0x000000f4       0xd4 main.o
 .debug_frame   0x000001c8       0x94 UART.o

.debug_str      0x00000000      0x6b2
 *(.debug_str)
 .debug_str     0x00000000      0x318 C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/ATmega_DFP/1.2.150/gcc/dev/atmega328pb/avr5/crtatmega328pb.o
 .debug_str     0x00000318      0x222 alarm.o
                                0x25b (size before relaxing)
 .debug_str     0x0000053a       0xae LED.o
                                0x1d7 (size before relaxing)
 .debug_str     0x000005e8       0x39 main.o
                                0x1ce (size before relaxing)
 .debug_str     0x00000621       0x91 UART.o
                                0x25d (size before relaxing)

.debug_loc      0x00000000      0x588
 *(.debug_loc)
 .debug_loc     0x00000000       0x2f alarm.o
 .debug_loc     0x0000002f      0x1a1 LED.o
 .debug_loc     0x000001d0      0x196 main.o
 .debug_loc     0x00000366      0x222 UART.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0xc0
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x50 alarm.o
 .debug_ranges  0x00000050       0x20 LED.o
 .debug_ranges  0x00000070       0x20 main.o
 .debug_ranges  0x00000090       0x30 UART.o

.debug_macro
 *(.debug_macro)
OUTPUT(moodlight.elf elf32-avr)
LOAD linker stubs
